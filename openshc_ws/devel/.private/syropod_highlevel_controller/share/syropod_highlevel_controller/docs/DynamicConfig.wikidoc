# Autogenerated param section. Do not hand edit.
param {
group.0 {
name=Dynamically Reconfigurable Parameters
desc=See the [[dynamic_reconfigure]] package for details on dynamically reconfigurable parameters.
0.name= ~step_frequency
0.default= 1.0
0.type= double
0.desc=Frequency of entire step cycle of one leg (Hz) Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
1.name= ~swing_height
1.default= 1.0
1.type= double
1.desc=Vertical displacement of swing trajectory above default position (metres) Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
2.name= ~swing_width
2.default= 1.0
2.type= double
2.desc=Lateral displacement of swing trajectory out from default position (metres) Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
3.name= ~step_depth
3.default= 1.0
3.type= double
3.desc=Depth below walk plane step will target to find contact (metres) Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
4.name= ~stance_span_modifier
4.default= 1.0
4.type= double
4.desc=Modifier for inc/dec stance span (y axis) Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
5.name= ~virtual_mass
5.default= 1.0
5.type= double
5.desc=Mass of virtual system of impedance controller Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
6.name= ~virtual_stiffness
6.default= 1.0
6.type= double
6.desc=Stiffness of virtual system of impedance controller Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
7.name= ~virtual_damping_ratio
7.default= 1.0
7.type= double
7.desc=Damping ratio of virtual system of impedance controller Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
8.name= ~force_gain
8.default= 1.0
8.type= double
8.desc=Multiplier of input force for virtual system of impedance controller Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
}
}
# End of autogenerated section. You may edit below.
